@model OrderModel
@using Nop.Core.Domain.Tax;
@using Nop.Core.Domain.Orders;

@if (!Model.IsLoggedInAsVendor)
{
    <script type="text/javascript">
        $(document).ready(function() {
            toggleChangeOrderStatus(false);
            toggleOrderTotals(false);
            toggleCC(false);
        });

        function toggleChangeOrderStatus(editmode) {
            if (editmode) {
                $('#pnlChangeOrderStatus').show();
                $('#btnChangeOrderStatus').hide();
            } else {
                $('#pnlChangeOrderStatus').hide();
                $('#btnChangeOrderStatus').show();
            }
        }

        function toggleOrderTotals(editmode) {
            if (editmode) {
                $('#trEditOrderTotals').show();
                $('#btnEditOrderTotals').hide();
                $('#btnSaveOrderTotals').show();
                $('#btnCancelOrderTotals').show();
            } else {
                $('#trEditOrderTotals').hide();
                $('#btnEditOrderTotals').show();
                $('#btnSaveOrderTotals').hide();
                $('#btnCancelOrderTotals').hide();
            }
        }

        function toggleCC(editmode) {
            if (editmode) {
                $('#lblCardType').hide();
                $('#@Html.FieldIdFor(model => model.CardType)').show();
                $('#lblCardName').hide();
                $('#@Html.FieldIdFor(model => model.CardName)').show();
                $('#lblCardNumber').hide();
                $('#@Html.FieldIdFor(model => model.CardNumber)').show();
                $('#lblCardCvv2').hide();
                $('#@Html.FieldIdFor(model => model.CardCvv2)').show();
                $('#lblCardExpirationMonth').hide();
                $('#@Html.FieldIdFor(model => model.CardExpirationMonth)').show();
                $('#lblCardExpirationYear').hide();
                $('#@Html.FieldIdFor(model => model.CardExpirationYear)').show();
                $('#btnEditCC').hide();
                $('#btnSaveCC').show();
                $('#btnCancelCC').show();
            } else {
                $('#lblCardType').show();
                $('#@Html.FieldIdFor(model => model.CardType)').hide();
                $('#lblCardName').show();
                $('#@Html.FieldIdFor(model => model.CardName)').hide();
                $('#lblCardNumber').show();
                $('#@Html.FieldIdFor(model => model.CardNumber)').hide();
                $('#lblCardCvv2').show();
                $('#@Html.FieldIdFor(model => model.CardCvv2)').hide();
                $('#lblCardExpirationMonth').show();
                $('#@Html.FieldIdFor(model => model.CardExpirationMonth)').hide();
                $('#lblCardExpirationYear').show();
                $('#@Html.FieldIdFor(model => model.CardExpirationYear)').hide();
                $('#btnEditCC').show();
                $('#btnSaveCC').hide();
                $('#btnCancelCC').hide();
            }
        }

    </script>
}
<table class="adminContent">
    @if (!Model.IsLoggedInAsVendor)
    {
        <tr style="display:none;">
            <td class="adminTitle">
                <strong>
                    @Html.NopLabelFor(model => model.OrderStatus):
                </strong>
            </td>
            <td class="adminData">
                <strong>
                    @Model.OrderStatus
                </strong>&nbsp;
                @if (Model.CanCancelOrder)
                {
                    <input type="submit" name="cancelorder" value="@T("Admin.Orders.Fields.OrderStatus.Cancel")" id="cancelorder" class="adminButton" onclick="return confirm('@T("Admin.Common.AreYouSure")');" />
                }
                <input type="submit" name="btnChangeOrderStatus" value="@T("Admin.Orders.Fields.OrderStatus.Change")" onclick="toggleChangeOrderStatus(true);return false;" id="btnChangeOrderStatus" class="adminButton" />
                <div id="pnlChangeOrderStatus">
                    <em>@T("Admin.Orders.Fields.OrderStatus.Change.ForAdvancedUsers")</em>
                    <br />
                    @Html.DropDownListFor(model => model.OrderStatusId, ((OrderStatus)Model.OrderStatusId).ToSelectList())
                    <input type="submit" name="btnSaveOrderStatus" value="@T("Admin.Common.Save")" id="btnSaveOrderStatus" class="adminButton" onclick="return confirm('@T("Admin.Common.AreYouSure")');" />
                    <input type="submit" name="btnCancelOrderStatus" value="@T("Admin.Common.Cancel")" onclick="toggleChangeOrderStatus(false);return false;" id="btnCancelOrderStatus" class="adminButton" />
                </div>
            </td>
        </tr>
    }
    <tr>
        <td class="adminTitle">
            @Html.NopLabelFor(model => model.Id):
        </td>
        <td class="adminData">
            @Model.OrderNumber
        </td>
    </tr>
    <tr>
        <td class="adminTitle">
            <strong>
                @Html.NopLabelFor(model => model.OrderStatus):
            </strong>
        </td>
        <td class="adminData">
            @(((OrderStep)Model.OrderStepId).ToName())
        </td>
    </tr>
    <tr class="adminSeparator">
        <td colspan="2">
            <hr />
        </td>
    </tr>
    @if (!Model.IsLoggedInAsVendor)
    {
        <tr>
            <td class="adminTitle">
                @Html.NopLabelFor(model => model.CustomerId):
            </td>
            <td class="adminData">
                @Html.ActionLink(Model.CustomerInfo, "Edit", "Customer", new { id = Model.CustomerId }, new { })
            </td>
        </tr>
        <tr>
            <td class="adminTitle">
                @Html.NopLabelFor(model => model.CustomerIp):
            </td>
            <td class="adminData">
                @Model.CustomerIp
            </td>
        </tr>
        if (Model.RecurringPaymentId > 0)
        {
            <tr>
                <td class="adminTitle">
                    @Html.NopLabelFor(model => model.RecurringPaymentId):
                </td>
                <td class="adminData">
                    <a href="@Url.Action("Edit", "RecurringPayment", new { id = Model.RecurringPaymentId })">@T("Admin.Common.View")</a>
                </td>
            </tr>
        }
        if (!String.IsNullOrEmpty(Model.VatNumber))
        {
            <tr>
                <td class="adminTitle">
                    @Html.NopLabelFor(model => model.VatNumber):
                </td>
                <td class="adminData">
                    @Model.VatNumber
                </td>
            </tr>
        }
        if (Model.AffiliateId > 0)
        {
            <tr>
                <td class="adminTitle">
                    @Html.NopLabelFor(model => model.AffiliateId):
                </td>
                <td class="adminData">
                    <a href="@Url.Action("Edit", "Affiliate", new { id = Model.AffiliateId })">@Model.AffiliateName - @T("Admin.Common.View")</a>
                </td>
            </tr>
        }
        if (Model.AllowCustomersToSelectTaxDisplayType || Model.TaxDisplayType == TaxDisplayType.IncludingTax)
        {
            <tr>
                <td class="adminTitle">
                    @Html.NopLabelFor(model => model.OrderSubtotalInclTax):
                </td>
                <td class="adminData">
                    @Model.OrderSubtotalInclTax
                </td>
            </tr>
        }
        if (Model.AllowCustomersToSelectTaxDisplayType || Model.TaxDisplayType == TaxDisplayType.ExcludingTax)
        {
            <tr>
                <td class="adminTitle">
                    @Html.NopLabelFor(model => model.OrderSubtotalExclTax):
                </td>
                <td class="adminData">
                    @Model.OrderSubtotalExclTax
                </td>
            </tr>
        }
        if ((Model.AllowCustomersToSelectTaxDisplayType || Model.TaxDisplayType == TaxDisplayType.IncludingTax)
            && !String.IsNullOrEmpty(Model.OrderSubTotalDiscountInclTax))
        {
            <tr>
                <td class="adminTitle">
                    @Html.NopLabelFor(model => model.OrderSubTotalDiscountInclTax):
                </td>
                <td class="adminData">
                    @Model.OrderSubTotalDiscountInclTax
                </td>
            </tr>
        }
        if ((Model.AllowCustomersToSelectTaxDisplayType || Model.TaxDisplayType == TaxDisplayType.ExcludingTax)
            && !String.IsNullOrEmpty(Model.OrderSubTotalDiscountExclTax))
        {
            <tr>
                <td class="adminTitle">
                    @Html.NopLabelFor(model => model.OrderSubTotalDiscountExclTax):
                </td>
                <td class="adminData">
                    @Model.OrderSubTotalDiscountExclTax
                </td>
            </tr>
        } 
        <tr>
            <td class="adminTitle">
                @Html.NopLabelFor(model => model.OrderTotal):
            </td>
            <td class="adminData">
                @Model.OrderTotal
            </td>
        </tr>
        if (!String.IsNullOrEmpty(Model.RefundedAmount))
        {
            <tr>
                <td class="adminTitle">
                    @Html.NopLabelFor(model => model.RefundedAmount):
                </td>
                <td class="adminData">
                    @Model.RefundedAmount
                </td>
            </tr>
        }
        if (Model.UsedDiscounts.Count > 0)
        {
            <tr>
                <td class="adminTitle">
                    @Html.NopLabelFor(model => model.UsedDiscounts):
                </td>
                <td class="adminData">
                    @for (int i = 0; i < Model.UsedDiscounts.Count; i++)
                    {
                        var discount = Model.UsedDiscounts[i];
                        <a href="@Url.Action("Edit", "Discount", new { id = discount.DiscountId })">@discount.DiscountName</a>
                        if (i != Model.UsedDiscounts.Count - 1)
                        {
                            <text>,</text>
                        }
                    }
                </td>
            </tr>
        }
        <tr style="display:none;">
            <td class="adminTitle">
                @Html.NopLabelFor(model => model.Profit):
            </td>
            <td class="adminData">
                @Model.Profit
            </td>
        </tr>
        <tr id="trEditOrderTotals">
            <td colspan="2">
                <table style="border: solid 1px black; padding: 5px;">
                    <tr>
                        <td>
                            @Html.NopLabelFor(model => model.OrderSubtotalInclTaxValue):
                        </td>
                        <td>
                            <div style="display:none;">@T("Admin.Orders.Fields.Edit.InclTax") @Html.EditorFor(model => model.OrderSubtotalInclTaxValue)</div>
</td>
                        <td>
                            @*@T("Admin.Orders.Fields.Edit.ExclTax")*@@Html.EditorFor(model => model.OrderSubtotalExclTaxValue)
                        </td>
                    </tr>
                    <tr style="display:none;">
                        <td>
                            @Html.NopLabelFor(model => model.OrderSubTotalDiscountInclTaxValue):
                        </td>
                        <td>
                            @T("Admin.Orders.Fields.Edit.InclTax") @Html.EditorFor(model => model.OrderSubTotalDiscountInclTaxValue)
                        </td>
                        <td>
                            @T("Admin.Orders.Fields.Edit.ExclTax") @Html.EditorFor(model => model.OrderSubTotalDiscountExclTaxValue)
                        </td>
                    </tr>
                    <tr style="display:none;">
                        <td>
                            @Html.NopLabelFor(model => model.OrderShippingInclTaxValue):
                        </td>
                        <td>
                            @T("Admin.Orders.Fields.Edit.InclTax") @Html.EditorFor(model => model.OrderShippingInclTaxValue)
                        </td>
                        <td>
                            @T("Admin.Orders.Fields.Edit.ExclTax") @Html.EditorFor(model => model.OrderShippingExclTaxValue)
                        </td>
                    </tr>
                    <tr style="display:none;">
                        <td>
                            @Html.NopLabelFor(model => model.PaymentMethodAdditionalFeeInclTaxValue):
                        </td>
                        <td>
                            @T("Admin.Orders.Fields.Edit.InclTax") @Html.EditorFor(model => model.PaymentMethodAdditionalFeeInclTaxValue)
                        </td>
                        <td>
                            @T("Admin.Orders.Fields.Edit.ExclTax") @Html.EditorFor(model => model.PaymentMethodAdditionalFeeExclTaxValue)
                        </td>
                    </tr>
                    <tr style="display:none;">
                        <td>
                            @Html.NopLabelFor(model => model.TaxRatesValue):
                        </td>
                        <td colspan="2">
                            @Html.EditorFor(model => model.TaxRatesValue)
                        </td>
                    </tr>
                    <tr style="display:none;">
                        <td>
                            @Html.NopLabelFor(model => model.TaxValue):
                        </td>
                        <td colspan="2">
                            @Html.EditorFor(model => model.TaxValue)
                        </td>
                    </tr>
                    <tr style="display:none;">
                        <td>
                            @Html.NopLabelFor(model => model.OrderTotalDiscountValue):
                        </td>
                        <td colspan="2">
                            @Html.EditorFor(model => model.OrderTotalDiscountValue)
                        </td>
                    </tr>
                    <tr>
                        <td>
                            @Html.NopLabelFor(model => model.OrderTotalValue):
                        </td>
                        <td colspan="2">
                            @Html.EditorFor(model => model.OrderTotalValue)
                        </td>
                    </tr>
                </table>
            </td>
        </tr>
        <tr>
            <td>
                <input type="submit" name="btnEditOrderTotals" value="@T("Admin.Orders.Fields.EditOrderTotals")" onclick=" toggleOrderTotals(true);return false; " id="btnEditOrderTotals" class="adminButton" />
                <input type="submit" name="btnSaveOrderTotals" value="@T("Admin.Orders.Fields.SaveOrderTotals")" id="btnSaveOrderTotals" class="adminButton" onclick="return confirm('@T("admin.common.areyousure")');" />
            </td>
            <td>
                <input type="submit" name="btnCancelOrderTotals" value="@T(" admin.orders.fields.cancelordertotals")" onclick=" toggleOrderTotals(false);return false; " id="btnCancelOrderTotals" class="adminButton" />
            </td>
        </tr>
        <tr class="adminSeparator">
            <td colspan="2">
                <hr />
            </td>
        </tr>
        <tr style="display:none;">
            <td class="adminTitle">
                @Html.NopLabelFor(model => model.PaymentMethod):
            </td>
            <td class="adminData">
                @Model.PaymentMethod
            </td>
        </tr>
    }
    <tr style="display:none;">
        <td class="adminTitle">
            @Html.NopLabelFor(model => model.PaymentStatus):
        </td>
        <td class="adminData">
            @Model.PaymentStatus &nbsp;

            @if (!Model.IsLoggedInAsVendor)
            {
                if (Model.CanCapture)
                {
                    <input type="submit" name="captureorder" value="@T(" admin.orders.fields.capture")" id="captureorder" class="adminButton" onclick=" return confirm('@T(" admin.common.areyousure")'); " />
                    <text>&nbsp;</text>
                }
                if (Model.CanMarkOrderAsPaid)
                {
                    <input type="submit" name="markorderaspaid" value="@T(" admin.orders.fields.markaspaid")" id="markorderaspaid" class="adminButton" onclick=" return confirm('@T(" admin.common.areyousure")'); " />
                    <text>&nbsp;</text>
                }
                if (Model.CanRefund)
                {
                    <input type="submit" name="refundorder" value="@T(" admin.orders.fields.refund")" id="refundorder" class="adminButton" onclick=" return confirm('@T(" admin.common.areyousure")'); " />
                    <text>&nbsp;</text>
                }
                if (Model.CanRefundOffline)
                {
                    <input type="submit" name="refundorderoffline" value="@T(" admin.orders.fields.refundoffline")" id="refundorderoffline" class="adminButton" onclick=" return confirm('@T(" admin.common.areyousure")'); " />
                    <text>&nbsp;</text>
                }
                if (Model.CanPartiallyRefund)
                {
                    <input type="submit" id="partiallyrefundorder" name="partiallyrefundorder" value="@T(" admin.orders.fields.partialrefund")" onclick=" javascript:OpenWindow('@(Url.Action(" partiallyrefundorderpopup", "Order" , new { id=Model.Id, online=true, btnid="btnRefreshPage" , formid="order-form" }))', 500, 300, true); return false; " class=" adminbutton" />
                    <text>&nbsp;</text>
                }
                if (Model.CanPartiallyRefundOffline)
                {
                    <input type="submit" id="partiallyrefundorderoffline" name="partiallyrefundorderoffline" value="@T(" admin.orders.fields.partialrefundoffline")" onclick=" javascript:OpenWindow('@(Url.Action(" partiallyrefundorderpopup", "Order" , new { id=Model.Id, online=false, btnid="btnRefreshPage" , formid="order-form" }))', 500, 300, true); return false; " class=" adminbutton" />
                    <text>&nbsp;</text>
                }
                if (Model.CanVoid)
                {
                    <input type="submit" name="voidorder" value="@T(" admin.orders.fields.void")" id="voidorder" class="adminButton" onclick=" return confirm('@T(" admin.common.areyousure")'); " />
                    <text>&nbsp;</text>
                }
                if (Model.CanVoidOffline)
                {
                    <input type="submit" name="voidorderoffline" value="@T(" admin.orders.fields.voidoffline")" id="voidorderoffline" class="adminButton" onclick=" return confirm('@T(" admin.common.areyousure")'); " />
                    <text>&nbsp;</text>
                }
            }
        </td>
    </tr>
    @if (Model.OrderStepId >= (int)OrderStep.MeasureForPrice)
    {
        <tr>
            <td class="adminTitle">
                <img alt="定金支付方式" src="/Administration/Content/images/ico-help.gif" title="定金支付方式"> 定金支付方式:
            </td>
            <td class="adminData">
                线下支付
            </td>
        </tr>
        <tr>
            <td class="adminTitle">
                <img alt="定金支付状态" src="/Administration/Content/images/ico-help.gif" title="定金支付状态"> 定金支付状态:
            </td>
            <td class="adminData">
                @(((OrderDepositPaymentStatus)Model.DepositPaymentStatus).ToName()) &nbsp;
                @if (Model.DepositPaymentStatus == (int)OrderDepositPaymentStatus.Paid)
                {
                    <input type="submit" name="confirmdepositpaid" value="确认已收定金" id="refundorder" class="adminButton" onclick="return confirm('@T(" admin.common.areyousure")'); " />
                    <text>&nbsp;</text>
                }
            </td>
        </tr>
    }
    @if (Model.OrderStepId >= (int)OrderStep.ManufactureAndInstallment)
    {
        <tr>
            <td class="adminTitle">
                <img alt="尾款支付方式" src="/Administration/Content/images/ico-help.gif" title="尾款支付方式"> 尾款支付方式:
            </td>
            <td class="adminData">
                线下支付
            </td>
        </tr>
        <tr>
            <td class="adminTitle">
                <img alt="尾款支付状态" src="/Administration/Content/images/ico-help.gif" title="尾款支付状态"> 尾款支付状态:
            </td>
            <td class="adminData">
                @(((OrderBalancePaymentStatus)Model.BalancePaymentStatus).ToName()) &nbsp;
                @if (Model.BalancePaymentStatus == (int)OrderBalancePaymentStatus.Paid)
                {
                    <input type="submit" name="confirmbalancepaid" value="确认已收尾款" id="refundorder" class="adminButton" onclick="return confirm('@T(" admin.common.areyousure")'); " />
                    <text>&nbsp;</text>
                }
            </td>
        </tr>
    }
    @if (Model.CustomValues != null && Model.CustomValues.Count > 0)
    {
        <tr>
            <td class="adminTitle">
                @Html.NopLabelFor(model => model.CustomValues):
            </td>
            <td class="adminData">
                <table>
                    @foreach (var item in Model.CustomValues)
                    {
                        <tr>
                            <td>@item.Key:</td>
                            <td>@(item.Value != null ? item.Value.ToString() : "")</td>
                        </tr>
                    }
                </table>
            </td>
        </tr>
    }
    <tr>
        <td class="adminTitle">
            <img alt="客户留言" src="/Administration/Content/images/ico-help.gif" title="客户留言"> 客户留言:
        </td>
        <td class="adminData">
            @Model.CustomerNote
        </td>
    </tr>
    <tr>
        <td class="adminTitle">
            @Html.NopLabelFor(model => model.CreatedOn):
        </td>
        <td class="adminData">
            @Model.CreatedOn.ToString("yyyy-MM-dd HH:mm:ss")
        </td>
    </tr>
</table>
