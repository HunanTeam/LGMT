@model ProductGroupModel
@using Nop.Core.Domain.Catalog;
@using Nop.Services.Catalog;
@using System.Text;
@{
    //resources for product tags input
    Html.AppendCssFileParts("~/Content/tagit/jquery.tagit.css");
    Html.AppendScriptParts("~/Scripts/tag-it.min.js");
}
<script type="text/javascript">
@{
    //TODO move to Model
    var productTags = EngineContext.Current.Resolve<IProductTagService>().GetAllProductTags();
    var productTagsSb = new StringBuilder();
    productTagsSb.Append("var sampleTags = [");
    for (int i = 0; i < productTags.Count; i++)
    {
        var tag = productTags[i];
        productTagsSb.Append("'");
        productTagsSb.Append(HttpUtility.JavaScriptStringEncode(tag.Name));
        productTagsSb.Append("'");
        if (i != productTags.Count - 1)
        {
            productTagsSb.Append(",");
        }
    }
    productTagsSb.Append("]");
}
    //product tags
    $(document).ready(function () {
        @Html.Raw(productTagsSb.ToString())
        $("#@Html.FieldIdFor(model => model.ProductTags)").tagit({
            availableTags: sampleTags,
            allowSpaces: true
        });
    });
</script>

@Html.ValidationSummary(false)
@Html.HiddenFor(model => model.Id)

<div id="product-group-edit">
    <ul>
        <li @Html.RenderSelectedTabIndex(0, GetSelectedTabIndex())>
            基本信息
        </li>
        <li @Html.RenderSelectedTabIndex(1, GetSelectedTabIndex())>
            套餐商品
        </li>
    </ul>
    <div>
        @TabInfo()
    </div>
    <div>
        @TabProducts()
    </div>
</div>
<script>
    $(document).ready(function () {
        $("#product-group-edit").kendoTabStrip({
            animation: {
                open: {
                    effects: "fadeIn"
                }
            },
            select: tabstrip_on_tab_select
        });
    });
</script>

@{
    //custom tabs
    var eventMessage = new AdminTabStripCreated(this.Html, "category-edit");
    EngineContext.Current.Resolve<IEventPublisher>().Publish(eventMessage);
    foreach (var eventBlock in eventMessage.BlocksToRender)
    {
        @eventBlock
    }
}

@*save selected tab index*@
<input type="hidden" id="selected-tab-index" name="selected-tab-index" value="@(GetSelectedTabIndex())">

@helper TabInfo()
{
    <table class="adminContent">
        <tr>
            <td class="adminTitle">
                <img src="/Administration/Content/images/ico-help.gif" title="套餐名"> 套餐名:
            </td>
            <td class="adminData">
                @Html.EditorFor(model => model.Name)
                @Html.ValidationMessageFor(model => model.Name)
            </td>
        </tr>
        <tr>
            <td class="adminTitle">
                <img src="/Administration/Content/images/ico-help.gif" title="图片"> 图片:
            </td>
            <td class="adminData">
                @Html.EditorFor(model => model.PictureId)
                @Html.ValidationMessageFor(model => model.PictureId)
            </td>
        </tr>
        <tr>
            <td class="adminTitle">
                @Html.NopLabelFor(model => model.ProductTags):
            </td>
            <td class="adminData">
                @Html.EditorFor(model => model.ProductTags)
                @Html.ValidationMessageFor(model => model.ProductTags)
            </td>
        </tr>
        <tr>
            <td class="adminTitle">
                <img src="/Administration/Content/images/ico-help.gif" title="简短说明"> 简短说明:
            </td>
            <td class="adminData">
                @Html.TextAreaFor(model => model.ShortDescription, new { style = "Width: 250px; Height: 150px;" })
            </td>
        </tr>
        <tr>
            <td class="adminTitle">
                @Html.NopLabelFor(model => model.FullDescription):
            </td>
            <td class="adminData">
                @Html.EditorFor(model => model.FullDescription, "RichEditor")
                @Html.ValidationMessageFor(model => model.FullDescription)
            </td>
        </tr>
        <tr>
            <td class="adminTitle">
                <img src="/Administration/Content/images/ico-help.gif" title="推荐"> 推荐:
            </td>
            <td class="adminData">
                @Html.EditorFor(x => x.Recommended)
                @Html.ValidationMessageFor(model => model.Recommended)
            </td>
        </tr>
        <tr>
            <td class="adminTitle">
                <img alt="推荐排序" src="/Administration/Content/images/ico-help.gif" title="排序"> 排序:
            </td>
            <td class="adminData">
                @Html.EditorFor(model => model.DisplayOrder)
                @Html.ValidationMessageFor(model => model.DisplayOrder)
            </td>
        </tr>
        <tr>
            <td class="adminTitle">
                <img src="/Administration/Content/images/ico-help.gif" title="发布"> 发布:
            </td>
            <td class="adminData">
                @Html.EditorFor(x => x.Published)
                @Html.ValidationMessageFor(model => model.Published)
            </td>
        </tr>
    </table>
}

@helper TabProducts()
{
    if (Model.Id > 0)
    {
        var defaultGridPageSize = EngineContext.Current.Resolve<Nop.Core.Domain.Common.AdminAreaSettings>().DefaultGridPageSize;
        var gridPageSizes = EngineContext.Current.Resolve<Nop.Core.Domain.Common.AdminAreaSettings>().GridPageSizes;

        <table class="adminContent">
            <tr>
                <td>
                    <div id="products-grid"></div>
                    <script>
                        $(document).ready(function () {
                            $("#products-grid").kendoGrid({
                                dataSource: {
                                    type: "json",
                                    transport: {
                                        read: {
                                            url: "@Html.Raw(Url.Action("GroupProductList", "Product", new { productGroupId = Model.Id }))",
                                            type: "POST",
                                            dataType: "json",
                                            data: addAntiForgeryToken
                                        },
                                        update: {
                                            url:"@Html.Raw(Url.Action("ProductUpdate", "Category"))",
                                            type: "POST",
                                            dataType: "json",
                                            data: addAntiForgeryToken
                                        },
                                        destroy: {
                                            url: "@Html.Raw(Url.Action("ProductDelete", "Category"))",
                                            type: "POST",
                                            dataType: "json",
                                            data: addAntiForgeryToken
                                        }
                                    },
                                    schema: {
                                        data: "Data",
                                        total: "Total",
                                        errors: "Errors",
                                        model: {
                                            id: "Id",
                                            fields: {
                                                ProductName: {editable: false, type: "string" },
                                                IsFeaturedProduct: {editable: true, type: "boolean" },
                                                DisplayOrder: {editable: true, type: "number" },
                                                ProductId: {editable: false, type: "number" }
                                            }
                                        }
                                    },
                                    requestEnd: function(e) {
                                        if(e.type=="update") {
                                            this.read();
                                        }
                                    },
                                    error: function(e) {
                                        display_kendoui_grid_error(e);
                                        // Cancel the changes
                                        this.cancelChanges();
                                    },
                                    pageSize: @(defaultGridPageSize),
                                    serverPaging: true,
                                    serverFiltering: true,
                                    serverSorting: true
                                },
                                pageable: {
                                    refresh: true,
                                    pageSizes: [@(gridPageSizes)]
                                },
                                editable: {
                                    confirmation: false,
                                    mode: "inline"
                                },
                                scrollable: false,
                                columns: [{
                                    field: "ProductName",
                                    title: "@T("Admin.Catalog.Categories.Products.Fields.Product")"
                                }, {
                                    field: "IsFeaturedProduct",
                                    title: "@T("Admin.Catalog.Categories.Products.Fields.IsFeaturedProduct")",
                                    width: 150,
                                    headerAttributes: { style: "text-align:center" },
                                    attributes: { style: "text-align:center" },
                                    template: '<img src="@Url.Content("~/Administration/Content/images/")active-#=IsFeaturedProduct#.gif" />'
                                }, {
                                    field: "DisplayOrder",
                                    title: "@T("Admin.Catalog.Categories.Products.Fields.DisplayOrder")",
                                    //integer format
                                    format: "{0:0}",
                                    width: 150
                                }, {
                                    field: "ProductId",
                                    title: "@T("Admin.Common.View")",
                                    width: 100,
                                    template: '<a href="@Url.Content("~/Admin/Product/Edit/")#=ProductId#">@T("Admin.Common.View")</a>'
                                }, {
                                    command: [{
                                        name: "edit",
                                        text: "@T("Admin.Common.Edit")"
                                    }, {
                                        name: "destroy",
                                        text: "@T("Admin.Common.Delete")"
                                    }],
                                    width: 200
                                }]
                            });
                        });
                    </script>
                </td>
            </tr>
            <tr>
                <td width="100%">
                    <input type="submit" id="btnAddNewProduct" value="@T("Admin.Catalog.Categories.Products.AddNew")" onclick="javascript:OpenWindow('@(Url.Action("GroupProductAddPopup", "Product", new { productGroupId = Model.Id, btnId = "btnRefreshProducts", formId = "product-group-form" }))', 800, 800, true); return false;" class="k-button" />
                    <input type="submit" id="btnRefreshProducts" style="display: none" />
                    <script type="text/javascript">
                        $(document).ready(function () {
                            $('#btnRefreshProducts').click(function () {
                                //refresh grid
                                var grid = $("#products-grid").data('kendoGrid');
                                grid.dataSource.read();

                                //return false to don't reload a page
                                return false;
                            });
                        });
                    </script>
                </td>
            </tr>
        </table>
    }
    else
    {
        @T("Admin.Catalog.Categories.Products.SaveBeforeEdit")
    }
}